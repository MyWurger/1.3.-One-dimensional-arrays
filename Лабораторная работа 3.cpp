/*******************************************************************************
 *          Л А Б О Р А Т О Р Н А Я    Р А Б О Т А   № 2     С  +  +           *
 *-----------------------------------------------------------------------------*
 * Project Type  : Win64 Console Application                                   *
 * Project Name  : Одномерные массивы                                          *
 * File Name     : Вариант1.CPP                                                *
 * Programmer(s) : Викулов Д.Г.  &   Курилова Д.О.                             *
 * Modifyed By   :                                                             *
 * Created       : 25/11/21                                                    *
 * Last Revision : 30/11/21                                                    *
 * Comment(s)    : Получает на вход массив из файла.                           *
 *                 Выполняет над ним указанные операции.                       *
 *******************************************************************************/

#include <iostream> //стандартные потоки ввода/вывода
#include <fstream>  //файловые потоки ввода/вывода
#include <math.h> // стандартная библиотека для вычисления математических операций
using namespace std; // используем пространство имён std
const char* FNAME = "Correct_data1.txt"; // запоминаем путь к файлу через константную переменную для удобства тестов
const int LEN_MAX = 10; // неизменяемая максимальная длина массива

/*******************************************************************/
/*                    Н А Б О Р    Т Е С Т О В                     */
/*******************************************************************/

//const char* FNAME = "1.txt";
//const char* FNAME = "Pustoi.txt";
//const char* FNAME = "Num_Ne_chislo1.txt";
//const char* FNAME = "Ne_chislo2.txt";
//const char* FNAME = "Del_less0.txt";
//const char* FNAME = "Del_0.txt";
//const char* FNAME = "Del_Ne_Chislo.txt";
//const char* FNAME = "Del_Bigger_Num.txt";
//const char* FNAME = "Del_raven_Num.txt";
//const char* FNAME = "M_Ne_Chislo.txt";
//const char* FNAME = "M_less_0.txt";
//const char* FNAME = "M_raven_N_2.txt";
//const char* FNAME = "M_raven_0.txt";
//const char* FNAME = "M_Bigger_N_2.txt";
//const char* FNAME = "Num_raven_0.txt";
//const char* FNAME = "Num_less0.txt";
//const char* FNAME = "i_Bigger_LEN_MAX.txt";
//const char* FNAME = "i_NeRavno_N.txt";

/*******************************************************************/
/*               О С Н О В Н А Я     П Р О Г Р А М М А             */
/*******************************************************************/
int main()
{ //начало main
	system("color F0"); // делаем консоль светлой
	setlocale(LC_ALL, "Rus"); // подключаем русский язык
	system("cls"); // чистим консоль перед выводом
	int Del; // индекс элемента массива, на который будем делить
	int Num; // реальное число элементов в массиве
	int i = 0; // индексная переменная. Отвечает за проход по индексам
	int M; // количество элементов суммирования
	int imax; // переменная отверчает за поиск индекса max
	int j = 0;
	int imin; // переменная отвечает за поиск индекса min
	double Summa = 0; // переменная отвечает за сумму первых и последних элементов
	double max = 0; // переменная отвечает за поиск самого max
	double min = 0; // переменная отвечает за поиск самого min
	double AVec[LEN_MAX]; // массив, отвечающий за считывание элементов из файла
	double NewVec[LEN_MAX]; // массив после деления
	double B[LEN_MAX];
	ifstream fin; // объявление объекта для потокового введения данных из файла
	fin.open(FNAME); // связываем обЪект с файлом. Открываем для чтания
	// проверки на ошибки файла
	fin >> Del; // считываем первое число из файла
	cout << "Номер элемента, на который будем делить элементы массива: " << Del << endl << endl; // эхо-печать
	fin >> M; // считали второе число из файла
	cout << "Количество первых и последних элементов массива: " << M << "\n\n"; // эхо-печать
	fin >> Num; // считали третье число из файла
	cout << "Число элементов в массиве из файла: " << Num << endl; // эхо-печать
	j = Num;
	if (!fin.is_open()) //файл не найден
	{
		cout << "Файл " << FNAME << " не найден\n";
		fin.close();      //закрыть файл
		system("pause");
		return 1;         //выход по ошибке
	}
	// файл существует, можно из него читать
	// проверки состояния файла
	if (fin.eof()) // файл пуст
	{
		cout << "Файл " << FNAME << " пустой\n";
		fin.close();    //закрыть файл
		system("pause");
		return 2; //выход по ошибке
	}
	if (fin.fail()) //в файле не число (проверяет по первому элементу строки)
	{
		cout << "Ошибка! В файле " << FNAME << " не число\n\n";
		fin.close();    //закрыть файл
		system("pause");
		return 3;   //выход по ошибке
	}
	cout << "\n\t\tЧтение элементов из файла " << FNAME << "\n\n";
	// к данному моменту в файле остался только наша строка-массив
	while (!(j==0)) // пока не закончился файл
	{
		fin >> AVec[i]; // считываем данный элемент и присваиваем AVec[i]
		//INT_MIN - минимальное значение для переменной типа INT
		//INT_MAX - максимальное значение для переменной типа INT
		if (!(INT_MIN <= abs(AVec[i]) && abs(AVec[i]) <= INT_MAX))// проверка на нечисло в самом массиве
		{
			cout << "ОШИБКА! Среди элементов массива " << FNAME << " есть не число" << endl;
			fin.close();    //закрыть файл
			system("pause");
			break;
			return 4;       //выход по ошибке
		}
		if (i > LEN_MAX) // если количество элементов в массиве больше максимально возможного
		{
			cout << "Ошибка! Число элементов в файле " << FNAME << " больше максимального\n";
			fin.close();    //закрыть файл
			break; // прекращаем цикл
			return 5; // выход по ошибке
		}
		cout << "1. i = " << i << "\tAVec[" << i
			<< "] = " << AVec[i]
			<< "\tfin.eof() = " << fin.eof()             // эхо-печать считанного массива
			<< "\tfin.good() = " << fin.good() << endl;
		
		i = i + 1; // увеличиваем счётчик
		j--;
	}//Конец while
	i = 0;
	while (!(fin.eof())) // пока не закончился файл
	{
		fin >> B[i]; // считываем данный элемент и присваиваем AVec[i]
		//INT_MIN - минимальное значение для переменной типа INT
		//INT_MAX - максимальное значение для переменной типа INT
		
		cout << "1. i = " << i << "\tB[" << i
			<< "] = " << B[i]
			<< "\tfin.eof() = " << fin.eof()             // эхо-печать считанного массива
			<< "\tfin.good() = " << fin.good() << endl;

		i = i + 1; // увеличиваем счётчик
	}
	if (i != Num) // количество элементов массива не совпадает с объявленным
	{
		cout << "Число элементов в файле " << FNAME << " не совпадает с введённым\n";
		system("pause");
		fin.close(); // закрыть файл
		return 6; // выход по ошибке
	}
	cout << endl;
	if (Del<0) // считанный индекс делителя отрицателен
	{
		cout << "Индекс не может быть отрицательным \n";
		fin.close();    // закрыть файл
		system("pause");
		return 7; // выход по ошибке
	}
	if (Del >= Num) // индекс делителя вышел за рамки максимально возможного
	{
		cout << "Индекс не может быть больше или равным количеству элементов массива  \n";
		fin.close(); //закрыть файл
		system("pause");
		return 8; // выход по ошибке 
	}
	if (M < 0) // количество элементов для суммирования отрицательно
	{
		cout << "Количество суммируемых элементов не может быть отрицательным \n";
		fin.close();    //закрыть файл
		system("pause");
		return 9; // выход по ошибке
	}
	if (M > (Num)/2) // проверка, чтобы не было перехлёста в сумме
	{
		cout << "Некорректное значение M\n";
		fin.close(); //закрыть файл
		system("pause");
		return 10; // выход по ошибке
	}
	cout << "Чтение файла OK\n\n";
	fin.close(); //закрытие файла исходных данных

	//	ОСНОВНОЙ АЛГОРИТМ ПРОГРАММЫ
	// Формируем новый массив
	cout << "Элемент массива, на который делим: " << AVec[Del] << endl<<endl; // эхо-печать делителя по индексу
	cout << "\t\t Новый массив NewVec: \n\n";
	for (i = 0; i < Num; i++)
	{
		NewVec[i] = AVec[i] / AVec[Del];   // само деление каждого элемента на указанный. Помещаем новый элемент в массив
		cout <<"2. "<< AVec[i] << " : " << AVec[Del]<<" = "<< NewVec[i] << endl; // эхо-печать нового массива
	}
	
	//Суммирование М элементов с начала и конца
	cout << "\n\n";
	cout << "\t\tНепосредственно расчёт: \n\n";
	for (i = 0; i < M; i++) // Меняем до M, так как в сумме участвуют М элементов, а не весь массив
	{
		cout << "3. " << Summa << " + " << NewVec[i] << " + " << NewVec[Num - 1 - i] << endl; // [Num-1-i] идём с конца, убираем просуммированные индесы 
		Summa = Summa + NewVec[i] + NewVec[Num-1 - i]; // каждый проход алгебраически меняем сумму
	} //Конец for
	cout << "Конечная сумма: " << Summa << "\n\n\n";

	max = NewVec[0]; // Задание начального максимального элемента
	min = NewVec[0]; //Задание начального минимального элемента
	imin = 0;
	imax = 0;

	//Поиск минимального элемента
	for (i = 0; i < Num; i++) //начало for, движения по остаточной части массива
	{
		if (NewVec[i] > max) //Больше ли следующий элемент чем max
		{
			max = NewVec[i]; // Максимальный элемент равен текущему
			imax = i; //Задание индекса текущего элемента
		}
	} //Конец for

	for (i = 0; i < Num; i++) //начало for, движения по остаточной части массива
	{
		if (NewVec[i] < min) //Меньше ли следующий элемент чем min
		{
			min = NewVec[i]; // Минимальный элемент равен текущему
			imin = i; //Задание индекса текущего элемента
		}
	} //Конец for
	cout << "5. Наибольший элемент массива: " << max << "\nЕго индекс: " << imax << endl<<endl;
	cout << "5. Наменьший элемент массива: " << min << "\nЕго индекс: " << imin << endl;
	system("pause");
	return 0;
} // конец main
